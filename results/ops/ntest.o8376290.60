staph.utils
Seed is :  0
Nstep :  400000
Number of points is :  6
Best F values :  [0.67161108]
Best parameters :  [[2.00243499e+00 1.45774157e-02 2.36022363e-07 3.08923140e+00]]
Creating pool with 8  processes

pool = %s <multiprocessing.pool.Pool object at 0x2accc4598f60>
bXlist, r3 and Imax are :  [2.00243499e+00 1.45774157e-02 2.36022363e-07 3.08923140e+00] 2.360223631874289e-07 13088723.299395164
r3 * Imax is :  3.0892314042296083
Starting loop for b2u=0.00e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499e+00 1.45774157e-02 3.08923140e+00 0.00000000e+00
 0.00000000e+00 1.57348242e-07]
Seed = 0, status counts :  Counter({2.0: 573, 1.0: 427})
Seed = 0, status counts :  Counter({2.0: 992, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 1000})
Seed = 0, status counts :  Counter({2.0: 1000})
Seed = 0, status counts :  Counter({2.0: 1000})
Seed = 0, status counts :  Counter({2.0: 1000})
Best thresh is : 2.10355586e+09
Which gives best dev of : 75.7786
Which is sum of :  [ 2.60705616  1.5752025  38.83582577 31.10887955  1.6516434  -0.        ]
p_res is : [0.084 0.54  1.    1.    1.    1.   ]
Starting loop for b2u=2.08e-01, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  0.20833333 0.         0.20833349]
Seed = 0, status counts :  Counter({2.0: 569, 1.0: 427, 4.0: 3, 3.0: 1})
Seed = 0, status counts :  Counter({2.0: 975, 4.0: 9, 3.0: 8, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 932, 4.0: 52, 3.0: 16})
Seed = 0, status counts :  Counter({2.0: 853, 4.0: 97, 3.0: 50})
Seed = 0, status counts :  Counter({2.0: 807, 4.0: 114, 3.0: 79})
Seed = 0, status counts :  Counter({2.0: 804, 4.0: 110, 3.0: 86})
Best thresh is : 2.17558314e+10
Which gives best dev of : 37.7340
Which is sum of :  [ 6.2660514   1.74503598  9.07769915 19.26722243  0.48812022  0.88982436]
p_res is : [0.045 0.264 0.9   0.972 0.977 0.978]
Starting loop for b2u=4.17e-01, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  0.41666667 0.         0.41666682]
Seed = 0, status counts :  Counter({2.0: 561, 1.0: 427, 4.0: 7, 3.0: 5})
Seed = 0, status counts :  Counter({2.0: 958, 4.0: 19, 3.0: 15, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 860, 4.0: 93, 3.0: 47})
Seed = 0, status counts :  Counter({2.0: 733, 4.0: 171, 3.0: 96})
Seed = 0, status counts :  Counter({2.0: 672, 4.0: 227, 3.0: 101})
Seed = 0, status counts :  Counter({2.0: 602, 4.0: 257, 3.0: 141})
Best thresh is : 3.34167927e+10
Which gives best dev of : 23.5570
Which is sum of :  [ 4.27704077  0.67447042  3.22320098 13.60465055  0.06136725  1.71630004]
p_res is : [0.062 0.313 0.819 0.953 0.937 0.958]
Starting loop for b2u=6.25e-01, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  0.625      0.         0.62500016]
Seed = 0, status counts :  Counter({2.0: 559, 1.0: 427, 4.0: 12, 3.0: 2})
Seed = 0, status counts :  Counter({2.0: 923, 4.0: 49, 3.0: 20, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 840, 4.0: 108, 3.0: 52})
Seed = 0, status counts :  Counter({2.0: 657, 4.0: 250, 3.0: 93})
Seed = 0, status counts :  Counter({2.0: 537, 4.0: 318, 3.0: 145})
Seed = 0, status counts :  Counter({2.0: 464, 4.0: 359, 3.0: 177})
Best thresh is : 3.92191606e+10
Which gives best dev of : 18.2063
Which is sum of :  [ 3.05953534  1.63522046  1.52790849 10.24768902  0.06136725  1.67456816]
p_res is : [0.077 0.268 0.772 0.935 0.937 0.959]
Starting loop for b2u=8.33e-01, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  0.83333333 0.         0.83333349]
Seed = 0, status counts :  Counter({2.0: 555, 1.0: 427, 4.0: 11, 3.0: 7})
Seed = 0, status counts :  Counter({2.0: 936, 4.0: 44, 3.0: 12, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 829, 4.0: 120, 3.0: 51})
Seed = 0, status counts :  Counter({2.0: 585, 4.0: 283, 3.0: 132})
Seed = 0, status counts :  Counter({2.0: 464, 4.0: 380, 3.0: 156})
Seed = 0, status counts :  Counter({4.0: 428, 2.0: 392, 3.0: 180})
Best thresh is : 4.61286759e+10
Which gives best dev of : 15.5173
Which is sum of :  [3.20080971e+00 1.68958685e+00 1.74534720e-02 8.09023780e+00
 1.64290260e-03 2.51759199e+00]
p_res is : [0.075 0.266 0.664 0.919 0.948 0.939]
Starting loop for b2u=1.04e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  1.04166667 0.         1.04166682]
Seed = 0, status counts :  Counter({2.0: 559, 1.0: 427, 4.0: 9, 3.0: 5})
Seed = 0, status counts :  Counter({2.0: 934, 4.0: 42, 3.0: 16, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 831, 4.0: 129, 3.0: 40})
Seed = 0, status counts :  Counter({2.0: 545, 4.0: 343, 3.0: 112})
Seed = 0, status counts :  Counter({4.0: 415, 2.0: 400, 3.0: 185})
Seed = 0, status counts :  Counter({4.0: 495, 2.0: 292, 3.0: 213})
Best thresh is : 3.79409602e+10
Which gives best dev of : 16.9996
Which is sum of :  [ 3.58024552e+00  1.47849442e+00  2.89635211e-02  1.04038087e+01
 -1.77635684e-15  1.50807469e+00]
p_res is : [0.07  0.274 0.668 0.936 0.95  0.963]
Starting loop for b2u=1.25e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  1.25       0.         1.25000016]
Seed = 0, status counts :  Counter({2.0: 556, 1.0: 427, 4.0: 15, 3.0: 2})
Seed = 0, status counts :  Counter({2.0: 944, 4.0: 39, 3.0: 9, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 825, 4.0: 117, 3.0: 58})
Seed = 0, status counts :  Counter({2.0: 555, 4.0: 297, 3.0: 148})
Seed = 0, status counts :  Counter({4.0: 446, 2.0: 353, 3.0: 201})
Seed = 0, status counts :  Counter({4.0: 522, 2.0: 270, 3.0: 208})
Best thresh is : 3.53003041e+10
Which gives best dev of : 18.2326
Which is sum of :  [2.99099645e+00 1.63522046e+00 2.50487494e-02 1.21450386e+01
 1.12455076e-02 1.42508711e+00]
p_res is : [0.078 0.268 0.633 0.946 0.955 0.965]
Starting loop for b2u=1.46e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  1.45833333 0.         1.45833349]
Seed = 0, status counts :  Counter({2.0: 558, 1.0: 427, 4.0: 10, 3.0: 5})
Seed = 0, status counts :  Counter({2.0: 942, 4.0: 36, 3.0: 14, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 805, 4.0: 145, 3.0: 50})
Seed = 0, status counts :  Counter({2.0: 514, 4.0: 348, 3.0: 138})
Seed = 0, status counts :  Counter({4.0: 479, 2.0: 332, 3.0: 189})
Seed = 0, status counts :  Counter({4.0: 566, 3.0: 219, 2.0: 215})
Best thresh is : 2.99911453e+10
Which gives best dev of : 16.0373
Which is sum of :  [2.37494002 1.83026786 0.05818801 9.94398202 0.03004663 1.79989464]
p_res is : [0.088 0.261 0.624 0.933 0.958 0.956]
Starting loop for b2u=1.67e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  1.66666667 0.         1.66666682]
Seed = 0, status counts :  Counter({2.0: 556, 1.0: 427, 4.0: 13, 3.0: 4})
Seed = 0, status counts :  Counter({2.0: 929, 4.0: 41, 3.0: 22, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 835, 4.0: 116, 3.0: 49})
Seed = 0, status counts :  Counter({2.0: 493, 4.0: 368, 3.0: 139})
Seed = 0, status counts :  Counter({4.0: 482, 2.0: 312, 3.0: 206})
Seed = 0, status counts :  Counter({4.0: 562, 3.0: 249, 2.0: 189})
Best thresh is : 2.60194245e+10
Which gives best dev of : 14.2224
Which is sum of :  [2.8579437  1.40364305 0.25533011 8.2088567  0.03004663 1.46655937]
p_res is : [0.08  0.277 0.595 0.92  0.958 0.964]
Starting loop for b2u=1.88e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  1.875      0.         1.87500016]
Seed = 0, status counts :  Counter({2.0: 554, 1.0: 427, 4.0: 17, 3.0: 2})
Seed = 0, status counts :  Counter({2.0: 946, 4.0: 33, 3.0: 13, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 835, 4.0: 116, 3.0: 49})
Seed = 0, status counts :  Counter({2.0: 541, 4.0: 341, 3.0: 118})
Seed = 0, status counts :  Counter({4.0: 528, 2.0: 288, 3.0: 184})
Seed = 0, status counts :  Counter({4.0: 570, 2.0: 216, 3.0: 214})
Best thresh is : 2.01929065e+10
Which gives best dev of : 14.3417
Which is sum of :  [2.54733408 2.13276185 0.51982928 7.52421552 0.39922588 1.2183683 ]
p_res is : [0.085 0.251 0.571 0.914 0.975 0.97 ]
Starting loop for b2u=2.08e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  2.08333333 0.         2.08333349]
Seed = 0, status counts :  Counter({2.0: 556, 1.0: 427, 4.0: 13, 3.0: 4})
Seed = 0, status counts :  Counter({2.0: 931, 4.0: 45, 3.0: 16, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 841, 4.0: 110, 3.0: 49})
Seed = 0, status counts :  Counter({2.0: 521, 4.0: 326, 3.0: 153})
Seed = 0, status counts :  Counter({4.0: 483, 2.0: 296, 3.0: 221})
Seed = 0, status counts :  Counter({4.0: 586, 3.0: 224, 2.0: 190})
Best thresh is : 1.50114243e+10
Which gives best dev of : 13.3143
Which is sum of :  [2.10875987 1.4532872  0.70067423 7.20480152 1.24224121 0.60454551]
p_res is : [0.093 0.275 0.558 0.911 0.987 0.985]
Starting loop for b2u=2.29e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  2.29166667 0.         2.29166682]
Seed = 0, status counts :  Counter({2.0: 560, 1.0: 427, 4.0: 13})
Seed = 0, status counts :  Counter({2.0: 935, 4.0: 39, 3.0: 18, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 847, 4.0: 106, 3.0: 47})
Seed = 0, status counts :  Counter({2.0: 534, 4.0: 333, 3.0: 133})
Seed = 0, status counts :  Counter({4.0: 517, 2.0: 299, 3.0: 184})
Seed = 0, status counts :  Counter({4.0: 612, 3.0: 209, 2.0: 179})
Best thresh is : 1.66763566e+10
Which gives best dev of : 14.8377
Which is sum of :  [3.1294612  3.7996618  1.16009429 5.88532708 0.25860397 0.60454551]
p_res is : [0.076 0.208 0.531 0.897 0.971 0.985]
Starting loop for b2u=2.50e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  2.5        0.         2.50000016]
Seed = 0, status counts :  Counter({2.0: 559, 1.0: 427, 4.0: 11, 3.0: 3})
Seed = 0, status counts :  Counter({2.0: 937, 4.0: 43, 3.0: 12, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 849, 4.0: 107, 3.0: 44})
Seed = 0, status counts :  Counter({2.0: 567, 4.0: 299, 3.0: 134})
Seed = 0, status counts :  Counter({4.0: 479, 2.0: 336, 3.0: 185})
Seed = 0, status counts :  Counter({4.0: 601, 3.0: 223, 2.0: 176})
Best thresh is : 7.94527972e+09
Which gives best dev of : 10.5109
Which is sum of :  [1.56407243 1.14850692 0.43335062 5.80061672 1.36384561 0.20050167]
p_res is : [0.105 0.288 0.578 0.896 0.988 0.995]
Starting loop for b2u=2.71e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  2.70833333 0.         2.70833349]
Seed = 0, status counts :  Counter({2.0: 562, 1.0: 427, 4.0: 8, 3.0: 3})
Seed = 0, status counts :  Counter({2.0: 956, 4.0: 22, 3.0: 14, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 871, 4.0: 90, 3.0: 39})
Seed = 0, status counts :  Counter({2.0: 610, 4.0: 280, 3.0: 110})
Seed = 0, status counts :  Counter({4.0: 492, 2.0: 346, 3.0: 162})
Seed = 0, status counts :  Counter({4.0: 560, 3.0: 241, 2.0: 199})
Best thresh is : 5.44013643e+09
Which gives best dev of : 12.1018
Which is sum of :  [1.56407243 0.98131266 0.82500421 6.99966236 1.6516434  0.08008011]
p_res is : [0.105 0.296 0.55  0.909 0.99  0.998]
Starting loop for b2u=2.92e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  2.91666667 0.         2.91666682]
Seed = 0, status counts :  Counter({2.0: 558, 1.0: 427, 4.0: 9, 3.0: 6})
Seed = 0, status counts :  Counter({2.0: 953, 4.0: 29, 3.0: 10, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 895, 4.0: 82, 3.0: 23})
Seed = 0, status counts :  Counter({2.0: 636, 4.0: 263, 3.0: 101})
Seed = 0, status counts :  Counter({4.0: 448, 2.0: 378, 3.0: 174})
Seed = 0, status counts :  Counter({4.0: 539, 3.0: 242, 2.0: 219})
Best thresh is : 5.38082042e+09
Which gives best dev of : 11.5495
Which is sum of :  [2.60705616 1.80158063 1.4217717  5.31567373 0.32333257 0.08008011]
p_res is : [0.084 0.262 0.518 0.89  0.973 0.998]
Starting loop for b2u=3.12e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  3.125      0.         3.12500016]
Seed = 0, status counts :  Counter({2.0: 559, 1.0: 427, 3.0: 7, 4.0: 7})
Seed = 0, status counts :  Counter({2.0: 956, 4.0: 20, 3.0: 16, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 880, 4.0: 89, 3.0: 31})
Seed = 0, status counts :  Counter({2.0: 650, 4.0: 251, 3.0: 99})
Seed = 0, status counts :  Counter({4.0: 435, 2.0: 390, 3.0: 175})
Seed = 0, status counts :  Counter({4.0: 556, 2.0: 262, 3.0: 182})
Best thresh is : 2.84331665e+09
Which gives best dev of : 9.9849
Which is sum of :  [ 1.73209298  0.92245802  0.89089146  4.93999948  1.49942628 -0.        ]
p_res is : [0.101 0.299 0.546 0.885 0.989 1.   ]
Starting loop for b2u=3.33e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  3.33333333 0.         3.33333349]
Seed = 0, status counts :  Counter({2.0: 567, 1.0: 427, 4.0: 4, 3.0: 2})
Seed = 0, status counts :  Counter({2.0: 966, 4.0: 19, 1.0: 8, 3.0: 7})
Seed = 0, status counts :  Counter({2.0: 897, 4.0: 78, 3.0: 25})
Seed = 0, status counts :  Counter({2.0: 679, 4.0: 246, 3.0: 75})
Seed = 0, status counts :  Counter({2.0: 457, 4.0: 393, 3.0: 150})
Seed = 0, status counts :  Counter({4.0: 527, 2.0: 282, 3.0: 191})
Best thresh is : 1.94965376e+09
Which gives best dev of : 9.0408
Which is sum of :  [ 0.97725486  1.14850692  0.95926098  5.01318308  0.94263989 -0.        ]
p_res is : [0.122 0.288 0.542 0.886 0.984 1.   ]
Starting loop for b2u=3.54e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  3.54166667 0.         3.54166682]
Seed = 0, status counts :  Counter({2.0: 563, 1.0: 427, 4.0: 6, 3.0: 4})
Seed = 0, status counts :  Counter({2.0: 955, 4.0: 30, 1.0: 8, 3.0: 7})
Seed = 0, status counts :  Counter({2.0: 913, 4.0: 59, 3.0: 28})
Seed = 0, status counts :  Counter({2.0: 721, 4.0: 211, 3.0: 68})
Seed = 0, status counts :  Counter({2.0: 467, 4.0: 395, 3.0: 138})
Seed = 0, status counts :  Counter({4.0: 522, 2.0: 279, 3.0: 199})
Best thresh is : 1.75250722e+09
Which gives best dev of : 10.7277
Which is sum of :  [ 1.52401666  1.77317055  1.71001776  4.58792475  1.13254529 -0.        ]
p_res is : [0.106 0.263 0.505 0.88  0.986 1.   ]
Starting loop for b2u=3.75e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  3.75       0.         3.75000016]
Seed = 0, status counts :  Counter({2.0: 567, 1.0: 427, 3.0: 5, 4.0: 1})
Seed = 0, status counts :  Counter({2.0: 971, 4.0: 19, 1.0: 8, 3.0: 2})
Seed = 0, status counts :  Counter({2.0: 924, 4.0: 56, 3.0: 20})
Seed = 0, status counts :  Counter({2.0: 717, 4.0: 204, 3.0: 79})
Seed = 0, status counts :  Counter({2.0: 467, 4.0: 374, 3.0: 159})
Seed = 0, status counts :  Counter({4.0: 499, 2.0: 308, 3.0: 193})
Best thresh is : 1.70340350e+09
Which gives best dev of : 9.4336
Which is sum of :  [ 1.82098717  1.77317055  1.68689496  2.65311211  1.49942628 -0.        ]
p_res is : [0.099 0.263 0.506 0.845 0.989 1.   ]
Starting loop for b2u=3.96e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  3.95833333 0.         3.95833349]
Seed = 0, status counts :  Counter({2.0: 570, 1.0: 427, 4.0: 3})
Seed = 0, status counts :  Counter({2.0: 968, 4.0: 19, 1.0: 8, 3.0: 5})
Seed = 0, status counts :  Counter({2.0: 925, 4.0: 55, 3.0: 20})
Seed = 0, status counts :  Counter({2.0: 728, 4.0: 200, 3.0: 72})
Seed = 0, status counts :  Counter({2.0: 511, 4.0: 373, 3.0: 116})
Seed = 0, status counts :  Counter({4.0: 490, 2.0: 351, 3.0: 159})
Best thresh is : 4.81135946e+08
Which gives best dev of : 11.9439
Which is sum of :  [ 0.97725486  0.36876699  0.49434078  8.4518669   1.6516434  -0.        ]
p_res is : [0.122 0.335 0.573 0.922 1.    1.   ]
Starting loop for b2u=4.17e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  4.16666667 0.         4.16666682]
Seed = 0, status counts :  Counter({2.0: 568, 1.0: 427, 4.0: 4, 3.0: 1})
Seed = 0, status counts :  Counter({2.0: 982, 1.0: 8, 4.0: 6, 3.0: 4})
Seed = 0, status counts :  Counter({2.0: 932, 4.0: 50, 3.0: 18})
Seed = 0, status counts :  Counter({2.0: 764, 4.0: 170, 3.0: 66})
Seed = 0, status counts :  Counter({2.0: 517, 4.0: 360, 3.0: 123})
Seed = 0, status counts :  Counter({4.0: 460, 2.0: 377, 3.0: 163})
Best thresh is : 4.10160316e+08
Which gives best dev of : 9.7065
Which is sum of :  [ 1.29902747  0.90329684  0.61394365  5.23855407  1.6516434  -0.        ]
p_res is : [0.112 0.3   0.564 0.889 1.    1.   ]
Starting loop for b2u=4.38e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  4.375      0.         4.37500016]
Seed = 0, status counts :  Counter({2.0: 565, 1.0: 427, 4.0: 6, 3.0: 2})
Seed = 0, status counts :  Counter({2.0: 976, 4.0: 10, 1.0: 8, 3.0: 6})
Seed = 0, status counts :  Counter({2.0: 948, 4.0: 38, 3.0: 14})
Seed = 0, status counts :  Counter({2.0: 772, 4.0: 169, 3.0: 59})
Seed = 0, status counts :  Counter({2.0: 566, 4.0: 324, 3.0: 110})
Seed = 0, status counts :  Counter({4.0: 443, 2.0: 399, 3.0: 158})
Best thresh is : 8.66168174e+08
Which gives best dev of : 12.0019
Which is sum of :  [ 2.43130109  3.22687615  3.04224309  1.93760848  1.36384561 -0.        ]
p_res is : [0.087 0.221 0.456 0.827 0.988 1.   ]
Starting loop for b2u=4.58e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  4.58333333 0.         4.58333349]
Seed = 0, status counts :  Counter({2.0: 564, 1.0: 427, 4.0: 7, 3.0: 2})
Seed = 0, status counts :  Counter({2.0: 971, 4.0: 11, 3.0: 10, 1.0: 8})
Seed = 0, status counts :  Counter({2.0: 953, 4.0: 37, 3.0: 10})
Seed = 0, status counts :  Counter({2.0: 800, 4.0: 133, 3.0: 67})
Seed = 0, status counts :  Counter({2.0: 604, 4.0: 287, 3.0: 109})
Seed = 0, status counts :  Counter({4.0: 428, 2.0: 420, 3.0: 152})
Best thresh is : 3.56946563e+08
Which gives best dev of : 11.4324
Which is sum of :  [ 0.97725486  1.00139151  2.563544    5.23855407  1.6516434  -0.        ]
p_res is : [0.122 0.295 0.472 0.889 1.    1.   ]
Starting loop for b2u=4.79e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  4.79166667 0.         4.79166682]
Seed = 0, status counts :  Counter({2.0: 564, 1.0: 427, 4.0: 9})
Seed = 0, status counts :  Counter({2.0: 977, 4.0: 11, 1.0: 8, 3.0: 4})
Seed = 0, status counts :  Counter({2.0: 962, 4.0: 33, 3.0: 5})
Seed = 0, status counts :  Counter({2.0: 822, 4.0: 123, 3.0: 55})
Seed = 0, status counts :  Counter({2.0: 615, 4.0: 280, 3.0: 105})
Seed = 0, status counts :  Counter({2.0: 428, 4.0: 401, 3.0: 171})
Best thresh is : 2.80549197e+08
Which gives best dev of : 13.1541
Which is sum of :  [ 1.29902747  1.55567378  1.44299771  7.20480152  1.6516434  -0.        ]
p_res is : [0.112 0.271 0.517 0.911 1.    1.   ]
Starting loop for b2u=5.00e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [2.00243499 0.01457742 3.0892314  5.         0.         5.00000016]
Seed = 0, status counts :  Counter({2.0: 572, 1.0: 427, 3.0: 1})
Seed = 0, status counts :  Counter({2.0: 977, 4.0: 9, 1.0: 8, 3.0: 6})
Seed = 0, status counts :  Counter({2.0: 971, 4.0: 25, 3.0: 4})
Seed = 0, status counts :  Counter({2.0: 814, 4.0: 145, 3.0: 41})
Seed = 0, status counts :  Counter({2.0: 647, 4.0: 258, 3.0: 95})
Seed = 0, status counts :  Counter({2.0: 447, 4.0: 405, 3.0: 148})
Best thresh is : 2.08046953e+08
Which gives best dev of : 13.1704
Which is sum of :  [ 1.33476107  1.37920333  2.10174661  6.70300112  1.6516434  -0.        ]
p_res is : [0.111 0.278 0.489 0.906 1.    1.   ]
optim objs is :  [75.77860738 37.73395353 23.55703001 18.20628872 15.51732272 16.99958689
 18.23263685 16.03731918 14.22237956 14.34173491 13.31430954 14.83769385
 10.51089398 12.10177517 11.5494949   9.98486821  9.04084574 10.72767502
  9.43359107 11.94387293  9.70646543 12.00187443 11.43238784 13.15414388
 13.17035553]
Best fit is : 9.040845741690571
1 DE solution took :  1302.409744890174 s
Output filename :  results/6021324_1000rep0se_59to59b2d1_1o5_cpu.npz
