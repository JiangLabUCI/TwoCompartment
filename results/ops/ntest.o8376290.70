staph.utils
Seed is :  0
Nstep :  400000
Number of points is :  6
Best F values :  [0.67901917]
Best parameters :  [[1.71130384e+00 9.83031636e-03 2.23356297e-07 3.32302782e+00]]
Creating pool with 8  processes

pool = %s <multiprocessing.pool.Pool object at 0x2add35e24e80>
bXlist, r3 and Imax are :  [1.71130384e+00 9.83031636e-03 2.23356297e-07 3.32302782e+00] 2.2335629734161153e-07 14877699.247452384
r3 * Imax is :  3.323027816873045
Starting loop for b2u=0.00e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384e+00 9.83031636e-03 3.32302782e+00 0.00000000e+00
 0.00000000e+00 1.48904198e-07]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 486})
Seed = 0, status counts :  Counter({2.0: 981, 1.0: 19})
Seed = 0, status counts :  Counter({2.0: 1000})
Seed = 0, status counts :  Counter({2.0: 1000})
Seed = 0, status counts :  Counter({2.0: 1000})
Seed = 0, status counts :  Counter({2.0: 1000})
Best thresh is : 2.75976246e+09
Which gives best dev of : 74.5568
Which is sum of :  [ 2.66795024  0.2924613  38.83582577 31.10887955  1.6516434  -0.        ]
p_res is : [0.083 0.46  1.    1.    1.    1.   ]
Starting loop for b2u=2.08e-01, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 0.20833333 0.         0.20833348]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 472, 3.0: 7, 4.0: 7})
Seed = 0, status counts :  Counter({2.0: 946, 4.0: 29, 1.0: 19, 3.0: 6})
Seed = 0, status counts :  Counter({2.0: 914, 4.0: 55, 3.0: 31})
Seed = 0, status counts :  Counter({2.0: 851, 4.0: 89, 3.0: 60})
Seed = 0, status counts :  Counter({2.0: 791, 4.0: 129, 3.0: 80})
Seed = 0, status counts :  Counter({2.0: 767, 4.0: 134, 3.0: 99})
Best thresh is : 3.49329392e+10
Which gives best dev of : 32.1804
Which is sum of :  [ 6.71762838  3.4831268   5.98158078 14.55474273  0.10109435  1.34227134]
p_res is : [0.042 0.215 0.866 0.957 0.964 0.967]
Starting loop for b2u=4.17e-01, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 0.41666667 0.         0.41666682]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 468, 4.0: 10, 3.0: 8})
Seed = 0, status counts :  Counter({2.0: 932, 4.0: 32, 1.0: 19, 3.0: 17})
Seed = 0, status counts :  Counter({2.0: 850, 4.0: 97, 3.0: 53})
Seed = 0, status counts :  Counter({2.0: 715, 4.0: 183, 3.0: 102})
Seed = 0, status counts :  Counter({2.0: 618, 4.0: 256, 3.0: 126})
Seed = 0, status counts :  Counter({2.0: 544, 4.0: 296, 3.0: 160})
Best thresh is : 5.45008451e+10
Which gives best dev of : 20.1788
Which is sum of :  [4.47120171 1.42833721 2.87291798 8.32938383 0.21707602 2.85984007]
p_res is : [0.06  0.276 0.811 0.921 0.924 0.931]
Starting loop for b2u=6.25e-01, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 0.625      0.         0.62500015]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 465, 4.0: 16, 3.0: 5})
Seed = 0, status counts :  Counter({2.0: 899, 4.0: 58, 3.0: 24, 1.0: 19})
Seed = 0, status counts :  Counter({2.0: 792, 4.0: 144, 3.0: 64})
Seed = 0, status counts :  Counter({2.0: 594, 4.0: 292, 3.0: 114})
Seed = 0, status counts :  Counter({2.0: 497, 4.0: 341, 3.0: 162})
Seed = 0, status counts :  Counter({2.0: 429, 4.0: 397, 3.0: 174})
Best thresh is : 6.02746062e+10
Which gives best dev of : 16.8772
Which is sum of :  [3.1294612  0.84716973 1.58398689 7.74537928 0.27934869 3.29180971]
p_res is : [0.076 0.303 0.774 0.916 0.92  0.921]
Starting loop for b2u=8.33e-01, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 0.83333333 0.         0.83333348]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 463, 4.0: 18, 3.0: 5})
Seed = 0, status counts :  Counter({2.0: 897, 4.0: 67, 1.0: 19, 3.0: 17})
Seed = 0, status counts :  Counter({2.0: 775, 4.0: 156, 3.0: 69})
Seed = 0, status counts :  Counter({2.0: 511, 4.0: 350, 3.0: 139})
Seed = 0, status counts :  Counter({4.0: 428, 2.0: 402, 3.0: 170})
Seed = 0, status counts :  Counter({4.0: 454, 2.0: 355, 3.0: 191})
Best thresh is : 5.69986717e+10
Which gives best dev of : 14.8851
Which is sum of :  [2.43130109 0.35719433 0.86679447 7.74537928 0.27934869 3.20504178]
p_res is : [0.087 0.336 0.744 0.916 0.92  0.923]
Starting loop for b2u=1.04e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 1.04166667 0.         1.04166682]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 464, 4.0: 14, 3.0: 8})
Seed = 0, status counts :  Counter({2.0: 891, 4.0: 75, 1.0: 19, 3.0: 15})
Seed = 0, status counts :  Counter({2.0: 755, 4.0: 168, 3.0: 77})
Seed = 0, status counts :  Counter({2.0: 470, 4.0: 378, 3.0: 152})
Seed = 0, status counts :  Counter({4.0: 471, 2.0: 330, 3.0: 199})
Seed = 0, status counts :  Counter({4.0: 549, 2.0: 240, 3.0: 211})
Best thresh is : 5.95029807e+10
Which gives best dev of : 14.6181
Which is sum of :  [2.37494002 0.67447042 0.37307765 7.20480152 0.17444705 3.81640739]
p_res is : [0.088 0.313 0.713 0.911 0.927 0.909]
Starting loop for b2u=1.25e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 1.25       0.         1.25000015]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 460, 4.0: 16, 3.0: 10})
Seed = 0, status counts :  Counter({2.0: 889, 4.0: 72, 3.0: 20, 1.0: 19})
Seed = 0, status counts :  Counter({2.0: 769, 4.0: 155, 3.0: 76})
Seed = 0, status counts :  Counter({2.0: 430, 4.0: 406, 3.0: 164})
Seed = 0, status counts :  Counter({4.0: 482, 2.0: 314, 3.0: 204})
Seed = 0, status counts :  Counter({4.0: 544, 3.0: 236, 2.0: 220})
Best thresh is : 5.40137182e+10
Which gives best dev of : 13.5882
Which is sum of :  [1.96078915e+00 9.03296843e-01 3.18188213e-03 8.09023780e+00
 7.04471526e-02 2.56021320e+00]
p_res is : [0.096 0.3   0.656 0.919 0.936 0.938]
Starting loop for b2u=1.46e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 1.45833333 0.         1.45833348]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 457, 4.0: 23, 3.0: 6})
Seed = 0, status counts :  Counter({2.0: 875, 4.0: 76, 3.0: 30, 1.0: 19})
Seed = 0, status counts :  Counter({2.0: 766, 4.0: 156, 3.0: 78})
Seed = 0, status counts :  Counter({2.0: 445, 4.0: 390, 3.0: 165})
Seed = 0, status counts :  Counter({4.0: 551, 2.0: 248, 3.0: 201})
Seed = 0, status counts :  Counter({4.0: 587, 3.0: 230, 2.0: 183})
Best thresh is : 5.64577721e+10
Which gives best dev of : 13.8009
Which is sum of :  [3.66096531 1.40364305 0.15013291 5.63460824 0.26322434 2.68834999]
p_res is : [0.069 0.277 0.608 0.894 0.921 0.935]
Starting loop for b2u=1.67e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 1.66666667 0.         1.66666682]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 460, 4.0: 21, 3.0: 5})
Seed = 0, status counts :  Counter({2.0: 889, 4.0: 68, 3.0: 24, 1.0: 19})
Seed = 0, status counts :  Counter({2.0: 743, 4.0: 173, 3.0: 84})
Seed = 0, status counts :  Counter({2.0: 439, 4.0: 415, 3.0: 146})
Seed = 0, status counts :  Counter({4.0: 549, 2.0: 258, 3.0: 193})
Seed = 0, status counts :  Counter({4.0: 613, 3.0: 240, 2.0: 147})
Best thresh is : 4.43671235e+10
Which gives best dev of : 13.7120
Which is sum of :  [2.99099645e+00 1.33108174e+00 1.04759955e-01 6.41887584e+00
 6.41570835e-03 2.85984007e+00]
p_res is : [0.078 0.28  0.615 0.903 0.946 0.931]
Starting loop for b2u=1.88e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 1.875      0.         1.87500015]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 463, 4.0: 18, 3.0: 5})
Seed = 0, status counts :  Counter({2.0: 895, 4.0: 55, 3.0: 31, 1.0: 19})
Seed = 0, status counts :  Counter({2.0: 767, 4.0: 172, 3.0: 61})
Seed = 0, status counts :  Counter({2.0: 454, 4.0: 393, 3.0: 153})
Seed = 0, status counts :  Counter({4.0: 533, 2.0: 251, 3.0: 216})
Seed = 0, status counts :  Counter({4.0: 593, 3.0: 259, 2.0: 148})
Best thresh is : 3.97147616e+10
Which gives best dev of : 13.0379
Which is sum of :  [3.66096531 1.71717528 0.70067423 5.16244382 0.03859645 1.7580755 ]
p_res is : [0.069 0.265 0.558 0.888 0.959 0.957]
Starting loop for b2u=2.08e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 2.08333333 0.         2.08333348]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 467, 4.0: 16, 3.0: 3})
Seed = 0, status counts :  Counter({2.0: 917, 4.0: 47, 1.0: 19, 3.0: 17})
Seed = 0, status counts :  Counter({2.0: 784, 4.0: 167, 3.0: 49})
Seed = 0, status counts :  Counter({2.0: 446, 4.0: 396, 3.0: 158})
Seed = 0, status counts :  Counter({4.0: 552, 3.0: 234, 2.0: 214})
Seed = 0, status counts :  Counter({4.0: 632, 3.0: 234, 2.0: 134})
Best thresh is : 2.74875194e+10
Which gives best dev of : 13.0181
Which is sum of :  [2.31965055 1.30739718 0.19532395 7.63395017 0.13665468 1.42508711]
p_res is : [0.089 0.281 0.602 0.915 0.966 0.965]
Starting loop for b2u=2.29e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 2.29166667 0.         2.29166682]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 461, 4.0: 18, 3.0: 7})
Seed = 0, status counts :  Counter({2.0: 908, 4.0: 49, 3.0: 24, 1.0: 19})
Seed = 0, status counts :  Counter({2.0: 787, 4.0: 152, 3.0: 61})
Seed = 0, status counts :  Counter({2.0: 452, 4.0: 380, 3.0: 168})
Seed = 0, status counts :  Counter({4.0: 560, 2.0: 241, 3.0: 199})
Seed = 0, status counts :  Counter({4.0: 596, 3.0: 269, 2.0: 135})
Best thresh is : 1.83057541e+10
Which gives best dev of : 11.8169
Which is sum of :  [2.10875987 0.96146485 0.33343398 6.99966236 0.44191548 0.9717077 ]
p_res is : [0.093 0.297 0.587 0.909 0.976 0.976]
Starting loop for b2u=2.50e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 2.5        0.         2.50000015]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 469, 4.0: 14, 3.0: 3})
Seed = 0, status counts :  Counter({2.0: 899, 4.0: 67, 1.0: 19, 3.0: 15})
Seed = 0, status counts :  Counter({2.0: 812, 4.0: 135, 3.0: 53})
Seed = 0, status counts :  Counter({2.0: 515, 4.0: 371, 3.0: 114})
Seed = 0, status counts :  Counter({4.0: 547, 3.0: 227, 2.0: 226})
Seed = 0, status counts :  Counter({4.0: 640, 3.0: 220, 2.0: 140})
Best thresh is : 1.72410558e+10
Which gives best dev of : 10.5921
Which is sum of :  [2.15998549 1.14850692 0.68583104 5.63460824 0.39922588 0.56395698]
p_res is : [0.092 0.288 0.559 0.894 0.975 0.986]
Starting loop for b2u=2.71e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 2.70833333 0.         2.70833348]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 467, 4.0: 13, 3.0: 6})
Seed = 0, status counts :  Counter({2.0: 922, 4.0: 37, 3.0: 22, 1.0: 19})
Seed = 0, status counts :  Counter({2.0: 806, 4.0: 149, 3.0: 45})
Seed = 0, status counts :  Counter({2.0: 482, 4.0: 378, 3.0: 140})
Seed = 0, status counts :  Counter({4.0: 530, 2.0: 262, 3.0: 208})
Seed = 0, status counts :  Counter({4.0: 621, 3.0: 215, 2.0: 164})
Best thresh is : 9.62316402e+09
Which gives best dev of : 10.3739
Which is sum of :  [1.60489381 0.81087176 0.0722306  7.20480152 0.35977881 0.32128687]
p_res is : [0.104 0.305 0.621 0.911 0.974 0.992]
Starting loop for b2u=2.92e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 2.91666667 0.         2.91666682]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 469, 4.0: 13, 3.0: 4})
Seed = 0, status counts :  Counter({2.0: 927, 4.0: 36, 1.0: 19, 3.0: 18})
Seed = 0, status counts :  Counter({2.0: 823, 4.0: 130, 3.0: 47})
Seed = 0, status counts :  Counter({2.0: 521, 4.0: 355, 3.0: 124})
Seed = 0, status counts :  Counter({4.0: 487, 2.0: 320, 3.0: 193})
Seed = 0, status counts :  Counter({4.0: 624, 3.0: 241, 2.0: 135})
Best thresh is : 6.04070966e+09
Which gives best dev of : 10.4456
Which is sum of :  [1.7761203  0.75808502 0.31295982 6.23605366 1.24224121 0.12018036]
p_res is : [0.1   0.308 0.589 0.901 0.987 0.997]
Starting loop for b2u=3.12e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 3.125      0.         3.12500015]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 475, 4.0: 10, 3.0: 1})
Seed = 0, status counts :  Counter({2.0: 934, 4.0: 41, 1.0: 19, 3.0: 6})
Seed = 0, status counts :  Counter({2.0: 844, 4.0: 110, 3.0: 46})
Seed = 0, status counts :  Counter({2.0: 571, 4.0: 323, 3.0: 106})
Seed = 0, status counts :  Counter({4.0: 502, 2.0: 314, 3.0: 184})
Seed = 0, status counts :  Counter({4.0: 596, 3.0: 217, 2.0: 187})
Best thresh is : 8.38564822e+09
Which gives best dev of : 10.7501
Which is sum of :  [2.73004374 2.26196563 1.48592171 3.59974292 0.59235413 0.08008011]
p_res is : [0.082 0.247 0.515 0.864 0.979 0.998]
Starting loop for b2u=3.33e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 3.33333333 0.         3.33333348]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 471, 4.0: 11, 3.0: 4})
Seed = 0, status counts :  Counter({2.0: 938, 4.0: 32, 1.0: 19, 3.0: 11})
Seed = 0, status counts :  Counter({2.0: 880, 4.0: 83, 3.0: 37})
Seed = 0, status counts :  Counter({2.0: 606, 4.0: 299, 3.0: 95})
Seed = 0, status counts :  Counter({4.0: 462, 2.0: 330, 3.0: 208})
Seed = 0, status counts :  Counter({4.0: 605, 3.0: 206, 2.0: 189})
Best thresh is : 5.48167564e+09
Which gives best dev of : 10.4344
Which is sum of :  [2.10875987 1.35501667 1.44299771 4.79644624 0.65113916 0.08008011]
p_res is : [0.093 0.279 0.517 0.883 0.98  0.998]
Starting loop for b2u=3.54e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 3.54166667 0.         3.54166682]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 470, 4.0: 14, 3.0: 2})
Seed = 0, status counts :  Counter({2.0: 937, 4.0: 27, 1.0: 19, 3.0: 17})
Seed = 0, status counts :  Counter({2.0: 887, 4.0: 84, 3.0: 29})
Seed = 0, status counts :  Counter({2.0: 614, 4.0: 275, 3.0: 111})
Seed = 0, status counts :  Counter({4.0: 479, 2.0: 373, 3.0: 148})
Seed = 0, status counts :  Counter({4.0: 580, 2.0: 217, 3.0: 203})
Best thresh is : 4.59229438e+09
Which gives best dev of : 9.7698
Which is sum of :  [2.92381024 1.52968626 1.68689496 2.60909714 0.86002817 0.16032086]
p_res is : [0.079 0.272 0.506 0.844 0.983 0.996]
Starting loop for b2u=3.75e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 3.75       0.         3.75000015]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 475, 4.0: 8, 3.0: 3})
Seed = 0, status counts :  Counter({2.0: 942, 4.0: 29, 1.0: 19, 3.0: 10})
Seed = 0, status counts :  Counter({2.0: 896, 4.0: 71, 3.0: 33})
Seed = 0, status counts :  Counter({2.0: 644, 4.0: 258, 3.0: 98})
Seed = 0, status counts :  Counter({4.0: 442, 2.0: 383, 3.0: 175})
Seed = 0, status counts :  Counter({4.0: 561, 2.0: 245, 3.0: 194})
Best thresh is : 4.03365769e+09
Which gives best dev of : 9.7680
Which is sum of :  [2.05849817 2.57069636 2.28614524 2.60909714 0.20357176 0.04002001]
p_res is : [0.094 0.238 0.482 0.844 0.969 0.999]
Starting loop for b2u=3.96e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 3.95833333 0.         3.95833348]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 478, 4.0: 6, 3.0: 2})
Seed = 0, status counts :  Counter({2.0: 945, 4.0: 23, 1.0: 19, 3.0: 13})
Seed = 0, status counts :  Counter({2.0: 895, 4.0: 71, 3.0: 34})
Seed = 0, status counts :  Counter({2.0: 649, 4.0: 257, 3.0: 94})
Seed = 0, status counts :  Counter({2.0: 423, 4.0: 415, 3.0: 162})
Seed = 0, status counts :  Counter({4.0: 566, 2.0: 248, 3.0: 186})
Best thresh is : 1.33414113e+09
Which gives best dev of : 9.2152
Which is sum of :  [ 1.16276668  0.52319676  1.25761156  5.23855407  1.03311866 -0.        ]
p_res is : [0.116 0.323 0.526 0.889 0.985 1.   ]
Starting loop for b2u=4.17e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 4.16666667 0.         4.16666682]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 483, 4.0: 3})
Seed = 0, status counts :  Counter({2.0: 953, 4.0: 22, 1.0: 19, 3.0: 6})
Seed = 0, status counts :  Counter({2.0: 892, 4.0: 78, 3.0: 30})
Seed = 0, status counts :  Counter({2.0: 709, 4.0: 215, 3.0: 76})
Seed = 0, status counts :  Counter({2.0: 472, 4.0: 391, 3.0: 137})
Seed = 0, status counts :  Counter({4.0: 524, 2.0: 296, 3.0: 180})
Best thresh is : 1.18945203e+09
Which gives best dev of : 9.2350
Which is sum of :  [ 1.40830948  0.77546054  1.4217717   4.38723103  1.24224121 -0.        ]
p_res is : [0.109 0.307 0.518 0.877 0.987 1.   ]
Starting loop for b2u=4.38e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 4.375      0.         4.37500015]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 477, 4.0: 6, 3.0: 3})
Seed = 0, status counts :  Counter({2.0: 948, 4.0: 26, 1.0: 19, 3.0: 7})
Seed = 0, status counts :  Counter({2.0: 910, 4.0: 64, 3.0: 26})
Seed = 0, status counts :  Counter({2.0: 715, 4.0: 216, 3.0: 69})
Seed = 0, status counts :  Counter({2.0: 508, 4.0: 372, 3.0: 120})
Seed = 0, status counts :  Counter({4.0: 501, 2.0: 310, 3.0: 189})
Best thresh is : 1.09320890e+09
Which gives best dev of : 9.2362
Which is sum of :  [ 1.82098717  1.40364305  1.95002576  2.69766578  1.36384561 -0.        ]
p_res is : [0.099 0.277 0.495 0.846 0.988 1.   ]
Starting loop for b2u=4.58e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 4.58333333 0.         4.58333348]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 478, 4.0: 5, 3.0: 3})
Seed = 0, status counts :  Counter({2.0: 945, 4.0: 27, 1.0: 19, 3.0: 9})
Seed = 0, status counts :  Counter({2.0: 927, 4.0: 60, 3.0: 13})
Seed = 0, status counts :  Counter({2.0: 741, 4.0: 190, 3.0: 69})
Seed = 0, status counts :  Counter({2.0: 529, 4.0: 365, 3.0: 106})
Seed = 0, status counts :  Counter({4.0: 479, 2.0: 331, 3.0: 190})
Best thresh is : 6.86375520e+08
Which gives best dev of : 10.6771
Which is sum of :  [ 2.37494002  1.37920333  1.44299771  3.65591554  1.82399997 -0.        ]
p_res is : [0.088 0.278 0.517 0.865 0.991 1.   ]
Starting loop for b2u=4.79e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 4.79166667 0.         4.79166682]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 482, 3.0: 2, 4.0: 2})
Seed = 0, status counts :  Counter({2.0: 953, 4.0: 25, 1.0: 19, 3.0: 3})
Seed = 0, status counts :  Counter({2.0: 949, 4.0: 36, 3.0: 15})
Seed = 0, status counts :  Counter({2.0: 761, 4.0: 184, 3.0: 55})
Seed = 0, status counts :  Counter({2.0: 520, 4.0: 354, 3.0: 126})
Seed = 0, status counts :  Counter({4.0: 445, 2.0: 383, 3.0: 172})
Best thresh is : 5.06428017e+08
Which gives best dev of : 10.4780
Which is sum of :  [ 1.37118448  1.06302539  2.563544    3.828648    1.6516434  -0.        ]
p_res is : [0.11  0.292 0.472 0.868 1.    1.   ]
Starting loop for b2u=5.00e+00, d1u=0.00
Using a sim stop threshold of 1.00000000e+10
Rates are :   [1.71130384 0.00983032 3.32302782 5.         0.         5.00000015]
Seed = 0, status counts :  Counter({1.0: 514, 2.0: 482, 4.0: 4})
Seed = 0, status counts :  Counter({2.0: 956, 4.0: 23, 1.0: 19, 3.0: 2})
Seed = 0, status counts :  Counter({2.0: 947, 4.0: 29, 3.0: 24})
Seed = 0, status counts :  Counter({2.0: 782, 4.0: 165, 3.0: 53})
Seed = 0, status counts :  Counter({2.0: 587, 4.0: 303, 3.0: 110})
Seed = 0, status counts :  Counter({4.0: 455, 2.0: 397, 3.0: 148})
Best thresh is : 2.93769239e+08
Which gives best dev of : 9.8537
Which is sum of :  [ 1.16276668  0.81087176  1.14105873  5.08732575  1.6516434  -0.        ]
p_res is : [0.116 0.305 0.532 0.887 1.    1.   ]
optim objs is :  [74.55676027 32.18044438 20.17875682 16.87715551 14.88505964 14.61814404
 13.58816603 13.80092384 13.71196976 13.03793058 13.01806363 11.81694425
 10.59211454 10.37386336 10.44564038 10.75010824 10.43443976  9.76983762
  9.76802869  9.21524773  9.23501396  9.23616737 10.67705656 10.47804528
  9.85366632]
Best fit is : 9.215247730608425
1 DE solution took :  1234.3891720579704 s
Output filename :  results/6021324_1000rep0se_69to69b2d1_1o5_cpu.npz
